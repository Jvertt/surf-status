{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('error fetching data!');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log('fetch aborted');\n      } else setIsLoading(false);\n      setError(err.message);\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"oHNKtHcXBLfWEYHeRSlN5KEv5w0=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isLoading","setIsLoading","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/Users/justinverthein/Development/code/phase-2/surf-status/src/useFetch.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        const abortCont = new AbortController();\n        fetch(url, { signal: abortCont.signal})\n            .then(res => {\n                if(!res.ok){\n                    throw Error('error fetching data!')\n                }\n                return res.json()\n        })\n            .then((data) => {\n                setData(data);\n                setIsLoading(false);\n                setError(null)\n            })\n            .catch(err => {\n                if(err.name === \"AbortError\"){\n                console.log('fetch aborted')\n                } else\n                setIsLoading(false)\n                setError(err.message);\n            })\n\n            return () => abortCont.abort()\n        }, [url]);\n\n        return { data, isLoading, error}\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;IACvCC,KAAK,CAACV,GAAG,EAAE;MAAEW,MAAM,EAAEH,SAAS,CAACG;IAAM,CAAC,CAAC,CAClCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAG,CAACA,GAAG,CAACC,EAAE,EAAC;QACP,MAAMC,KAAK,CAAC,sBAAsB,CAAC;MACvC;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACzB,CAAC,CAAC,CACGJ,IAAI,CAAEV,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDU,KAAK,CAACC,GAAG,IAAI;MACV,IAAGA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAC;QAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,CAAC,MACDhB,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACW,GAAG,CAACI,OAAO,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,MAAMd,SAAS,CAACe,KAAK,CAAC,CAAC;EAClC,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACxC,CAAC;AAAAL,EAAA,CA9BKF,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}