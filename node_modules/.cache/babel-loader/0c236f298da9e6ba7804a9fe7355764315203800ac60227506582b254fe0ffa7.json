{"ast":null,"code":"var _jsxFileName = \"/Users/justinverthein/Development/code/phase-2/surf-status/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport SurfSpot from './SurfSpot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = _ref => {\n  _s();\n  let {\n    data,\n    handleVisited\n  } = _ref;\n  const totalSpots = data.length;\n  const filteredSpots = data.filter(surfspot => surfspot.visited).length;\n  const progressRef = useRef(null);\n  useEffect(() => {\n    const progress = progressRef.current;\n    const radius = progress.r.baseVal.value;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference * (1 - filteredSpots / totalSpots);\n    progress.style.strokeDasharray = `${circumference} ${circumference}`;\n    progress.style.strokeDashoffset = offset;\n  }, [filteredSpots, totalSpots]);\n  const calculatePercentage = () => {\n    return (filteredSpots / totalSpots * 100).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"progress\",\n      width: \"120\",\n      height: \"120\",\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"progress-circle\",\n        ref: progressRef,\n        r: \"50\",\n        cx: \"60\",\n        cy: \"60\",\n        fill: \"transparent\",\n        strokeWidth: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"progress-percentage\",\n      children: [calculatePercentage(), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(SurfSpot, {\n      spots: data,\n      handleVisited: handleVisited\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"gYIbohfI5V1j/arJ8hbSQuZOLQk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useRef","SurfSpot","jsxDEV","_jsxDEV","Home","_ref","_s","data","handleVisited","totalSpots","length","filteredSpots","filter","surfspot","visited","progressRef","progress","current","radius","r","baseVal","value","circumference","Math","PI","offset","style","strokeDasharray","strokeDashoffset","calculatePercentage","toFixed","className","children","width","height","ref","cx","cy","fill","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","spots","_c","$RefreshReg$"],"sources":["/Users/justinverthein/Development/code/phase-2/surf-status/src/Home.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport SurfSpot from './SurfSpot';\n\nconst Home = ({ data, handleVisited }) => {\n  const totalSpots = data.length;\n  const filteredSpots = data.filter((surfspot) => surfspot.visited).length;\n  const progressRef = useRef(null);\n\n  useEffect(() => {\n    const progress = progressRef.current;\n    const radius = progress.r.baseVal.value;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference * (1 - filteredSpots / totalSpots);\n\n    progress.style.strokeDasharray = `${circumference} ${circumference}`;\n    progress.style.strokeDashoffset = offset;\n  }, [filteredSpots, totalSpots]);\n\n  const calculatePercentage = () => {\n    return ((filteredSpots / totalSpots) * 100).toFixed(2);\n  };\n\n  return (\n    <div className=\"home\">\n      <svg className=\"progress\" width=\"120\" height=\"120\">\n        <circle\n          className=\"progress-circle\"\n          ref={progressRef}\n          r=\"50\"\n          cx=\"60\"\n          cy=\"60\"\n          fill=\"transparent\"\n          strokeWidth=\"10\"\n        />\n      </svg>\n      <span className=\"progress-percentage\">{calculatePercentage()}%</span>\n      {data && <SurfSpot spots={data} handleVisited={handleVisited} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGC,IAAA,IAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,IAAI;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACnC,MAAMI,UAAU,GAAGF,IAAI,CAACG,MAAM;EAC9B,MAAMC,aAAa,GAAGJ,IAAI,CAACK,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAACJ,MAAM;EACxE,MAAMK,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAGD,WAAW,CAACE,OAAO;IACpC,MAAMC,MAAM,GAAGF,QAAQ,CAACG,CAAC,CAACC,OAAO,CAACC,KAAK;IACvC,MAAMC,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGN,MAAM;IAC1C,MAAMO,MAAM,GAAGH,aAAa,IAAI,CAAC,GAAGX,aAAa,GAAGF,UAAU,CAAC;IAE/DO,QAAQ,CAACU,KAAK,CAACC,eAAe,GAAI,GAAEL,aAAc,IAAGA,aAAc,EAAC;IACpEN,QAAQ,CAACU,KAAK,CAACE,gBAAgB,GAAGH,MAAM;EAC1C,CAAC,EAAE,CAACd,aAAa,EAAEF,UAAU,CAAC,CAAC;EAE/B,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAO,CAAElB,aAAa,GAAGF,UAAU,GAAI,GAAG,EAAEqB,OAAO,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB7B,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAACE,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAAAF,QAAA,eAChD7B,OAAA;QACE4B,SAAS,EAAC,iBAAiB;QAC3BI,GAAG,EAAEpB,WAAY;QACjBI,CAAC,EAAC,IAAI;QACNiB,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,IAAI,EAAC,aAAa;QAClBC,WAAW,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxC,OAAA;MAAM4B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAEH,mBAAmB,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpEpC,IAAI,iBAAIJ,OAAA,CAACF,QAAQ;MAAC2C,KAAK,EAAErC,IAAK;MAACC,aAAa,EAAEA;IAAc;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACrC,EAAA,CApCIF,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}